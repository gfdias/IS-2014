<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/3.1/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.1/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/smtps http://www.mulesoft.org/schema/mule/smtps/current/mule-smtps.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd"
	version="EE-3.5.2">
	<db:generic-config name="Generic_Database_Configuration"
		url="jdbc:postgresql://localhost/isnews?password=postgres&amp;user=goncalodias"
		driverClassName="org.postgresql.Driver" doc:name="Generic Database Configuration">
	</db:generic-config>
	<db:mysql-config name="MySQL_Configuration" host="localhost"
		port="3306" user="root" password="passwd" database="IS"
		doc:name="MySQL Configuration" />
	<data-mapper:config name="List_Map__To_JSON_1"
		transformationGraphPath="list_map__to_json_1.grf" doc:name="List_Map__To_JSON_1" />
	<data-mapper:config name="List_Map__To_JSON"
		transformationGraphPath="list_map__to_json.grf" doc:name="List_Map__To_JSON" />
	<http:connector name="HTTP_HTTPS" cookieSpec="netscape"
		validateConnections="true" sendBufferSize="0" receiveBufferSize="0"
		receiveBacklog="0" clientSoTimeout="10000" serverSoTimeout="10000"
		socketSoLinger="0" doc:name="HTTP-HTTPS" />
	<email:email-to-string-transformer
		name="email" doc:name="Email to String" />
	<smtp:connector name="SMTP" validateConnections="true"
		doc:name="SMTP" />
	<smtp:gmail-connector name="Gmail"
		validateConnections="true" doc:name="Gmail" />
	<flow name="Newsletter_HTTP" doc:name="Newsletter_HTTP">
		<http:inbound-endpoint exchange-pattern="request-response"
			host="localhost" port="8888" doc:name="HTTP" />
		<parse-template location="index.tmpl" doc:name="Parse Template" />
		<http:response-builder status="200" contentType="text/html"
			doc:name="HTTP Response Builder" />
	</flow>
	<flow name="http_confirm_subscription" doc:name="http_confirm_subscription">
		<http:inbound-endpoint exchange-pattern="request-response"
			host="localhost" port="8888" path="confirm" doc:name="HTTP" />
		<flow-ref name="confirm_subscription" doc:name="Flow Reference" />
	</flow>
	<flow name="confirm_subscription" doc:name="confirm_subscription">
		<db:update config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query><![CDATA[update client set validated=1 where email = #[message.inboundProperties['email']]]]></db:parameterized-query>
		</db:update>
		<set-payload value="subscription confirmed" doc:name="Set Payload" />
	</flow>

	<flow name="add_newsletter_HTTP" doc:name="add_newsletter_HTTP">
		<http:inbound-endpoint exchange-pattern="request-response"
			host="localhost" port="8888" doc:name="HTTP" path="NewsletterRegister"
			encoding="iso-8859-1" />
		<copy-properties propertyName="*" doc:name="Property" />
		<flow-ref name="check_email_to_add" doc:name="Flow Reference" />
	</flow>
	<sub-flow name="check_email_to_add" doc:name="check_email_to_add">
		<db:select config-ref="MySQL_Configuration" doc:name="Email on db">
			<db:parameterized-query><![CDATA[select count(*) emailsFound from client where email=#[message.outboundProperties['email']]]]></db:parameterized-query>
		</db:select>
		<choice doc:name="Choice">
			<when expression="#[message.payload.get(0).emailsFound&lt;0]">
				<set-payload value="Already subscribed" doc:name="email found" />
			</when>
			<otherwise>
				<set-payload value="'adiciona o email'" doc:name="add email" />
				<flow-ref name="add_email_to_newsletter" doc:name="Flow Reference" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="add_email_to_newsletter" doc:name="add_email_to_newsletter">
		<scatter-gather doc:name="Scatter-Gather">
			<processor-chain>
				<db:insert config-ref="MySQL_Configuration" doc:name="Insert email">
					<db:parameterized-query><![CDATA[INSERT INTO Client (subscription, email, validated,region) values (0, #[message.outboundProperties['http.query.params']['email']],0,0)]]></db:parameterized-query>
				</db:insert>
				<set-payload value="'successfully added'" doc:name="Set Payload" />
			</processor-chain>
			<async doc:name="Async">

				<message-properties-transformer
					doc:name="Message Properties">
					<add-message-property key="toAddresses"
						value="#[message.outboundProperties['http.query.params']['email']]" />
				</message-properties-transformer>
				<set-payload
					value="Enter http://localhost:8888/confirm?email=#[message.outboundProperties['http.query.params']['email']] to validate your subscription"
					doc:name="Set Payload" />
				<smtp:outbound-endpoint host="smtp.gmail.com"
					port="587" user="devjoao%40gmail.com" password="accountdev"
					connector-ref="Gmail" from="no_reply@isnews.com" subject="Confirm your email"
					replyTo="no_reply@isnews.com" responseTimeout="10000" doc:name="SMTP" />
			</async>
		</scatter-gather>
	</sub-flow>
    <flow name="soapSubscribe" doc:name="soapSubscribe">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8082" path="soapSubscribe" doc:name="HTTP"/>
        <cxf:jaxws-service serviceClass="org.subscribe.ISubscribe" doc:name="SOAP"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <component class="org.subscribe.Subscribe" doc:name="Java"/>
    </flow>
    <flow name="soapClient" doc:name="soapClient">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8082" path="soapClient/subscribe" doc:name="HTTP"/>
        <logger level="INFO" doc:name="Logger"/>
        <cxf:jaxws-client operation="sayHello" serviceClass="org.subscribe.ISubscribe" doc:name="SOAP"/>
        <http:outbound-endpoint exchange-pattern="request-response" host="localhost" port="8082" path="soapSubscribe" method="POST" doc:name="HTTP"/>
        <object-to-string-transformer doc:name="Object to String"/>
    </flow>
	<flow name="muleFlow1" doc:name="muleFlow1">
		<http:outbound-endpoint exchange-pattern="request-response"
			host="localhost" port="8888" path="NewsletterRegister" method="POST"
			doc:name="HTTP" />
		<logger level="INFO" doc:name="Logger" />
		<set-payload value="'nice'" doc:name="Set Payload" />
		<logger level="INFO" doc:name="Logger" />
	</flow>
</mule>