//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.14 at 01:59:56 AM WEST 
//


package aux;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for topicnametype.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="topicnametype">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="World"/>
 *     &lt;enumeration value="U.S."/>
 *     &lt;enumeration value="Africa"/>
 *     &lt;enumeration value="Asia"/>
 *     &lt;enumeration value="Europe"/>
 *     &lt;enumeration value="Latin America"/>
 *     &lt;enumeration value="Middle East"/>
 *     &lt;enumeration value="Business"/>
 *     &lt;enumeration value="World Sport"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "topicnametype")
@XmlEnum
public enum Topicnametype {

    @XmlEnumValue("World")
    WORLD("World"),
    @XmlEnumValue("U.S.")
    U_S("U.S."),
    @XmlEnumValue("Africa")
    AFRICA("Africa"),
    @XmlEnumValue("Asia")
    ASIA("Asia"),
    @XmlEnumValue("Europe")
    EUROPE("Europe"),
    @XmlEnumValue("Latin America")
    LATIN_AMERICA("Latin America"),
    @XmlEnumValue("Middle East")
    MIDDLE_EAST("Middle East"),
    @XmlEnumValue("Business")
    BUSINESS("Business"),
    @XmlEnumValue("World Sport")
    WORLD_SPORT("World Sport");
    private final String value;

    Topicnametype(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Topicnametype fromValue(String v) {
        for (Topicnametype c: Topicnametype.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
